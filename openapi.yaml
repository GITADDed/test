openapi: "3.0.2"
info:
    title: Test Project API
    version: '1.0'
components:
    schemas:
        error:
            type: object
            properties:
                code:
                    description: code error
                    type: string
                    required: true
                    example: '404'
        message:
            type: object
            properties:
                message_id:
                    description: Identificator message
                    type: integer
                    required: true
                    example: 1
                text:
                    description: message text
                    type: string
                    required: true
                    example: I'll be back!!
        history:
            type: object
            properties:
                user_login:
                    description: User login, who make last action with message
                    type: string
                    required: true
                    example: 1
                message_id:
                    description: Message id
                    type: string
                    required: true
                    example: 1
                text:
                    description: message text
                    type: string
                    required: true
                    example: To be or not to be
                action:
                    description: Last action with message
                    type: string
                    required: true
                    enum:
                        - UPDATE
                        - CREATE
                        - DELETE
                    example: CREATE
paths:
    /ping:
        get:
            description: Check that server is work
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            schema:
                                title: Server is working
                                type: string
                                example: pong

    /message/create:
        post:
            description: Create message from user
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                messageText:
                                    description: Input message text from user
                                    type: string
                                    required: true
                                    default:
                        example: {messageText: "This Sword Is The Proof That I Have Lived."}
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    messageID:
                                        description: Created message id
                                        type: string
                                        required: true
                            example: {messageID: "550e8400-e29b-41d4-a716-446655440000"}
    /message/update/{messageID}:
        post:
            description: Update message by message id and save it in history
            parameters:
            - name: messageID
              in: path
              description: message identificator
              required: true
              schema:
                type: string
              example: /message/update/4
            responses:
                '200':
                    description: OK
                '404':
                    description: Not found id
                    content:
                        application/json:
                                schema:
                                    $ref: "#/components/schemas/error"
                                example: {code: 404, message: "Not found id"}
    /message/delete/{messageId}:
        post:
            description: Delete message by message id and save it in history, after deleting message cant be modify
            parameters:
                - name: messageId
                  in: path
                  description: message identificator
                  required: true
                  schema:
                      type: string
                  example: /delete/message/5
            responses:
                '200':
                    description: OK
                '400':
                    description: Invalid path parameter
                    content:
                        application/json:
                                schema:
                                    $ref: "#/components/schemas/error"
    /message/history:
        get:
            description: Get one or more messages history
            requestBody:
                    required: false
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message_id_from:
                                        description: Message id for history, which begin
                                        type: string
                                        required: true
                                    message_id_to:
                                        description: Message id for history, which end, if not exist use one message from message_id_from
                                        type: string
                                        required: false
                            example: {message_id_from: 1, message_id_to: 5}
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                title: History
                                type: array
                                items:
                                    $ref: "#/components/schemas/history"
    /message/show/all:
        get:
            description: Get all messages with last updates
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                title: messages
                                type: array
                                items:
                                    $ref: "#/components/schemas/message"

    /message/show/deleted:
        get:
            description: Get all deleted messages
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                title: messages
                                type: array
                                items:
                                    $ref: "#/components/schemas/message"

    /message/show/{message_id}:
        get:
            description: Get message by id
            parameters:
                - in: path
                  description: message identificator
                  name: message_id
                  schema:
                      type: integer
                      example: 1
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/message"
                '404':
                    description: Not found message
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/error"